#import "../../fragments/media.graphql"

query GetMediaDetails(
  $mediaId: Int
  $mediaType: MediaType
  $charactersPerPage: Int
  $staffPerPage: Int
  $reviewsPerPage: Int
) {
  MediaDetails: Media(id: $mediaId, type: $mediaType) {
    ...media
  }

  Following: Page(page: 1) {
    pageInfo {
      total
      perPage
      currentPage
      lastPage
      hasNextPage
    }
    mediaList(isFollowing: true, sort: [STATUS], mediaId: $mediaId) {
      id
      status
      score(format: POINT_100)
      progress
      progressVolumes
      user {
        id
        name
        avatar {
          large
          medium
        }
      }
    }
  }

  MediaInfo: Media(id: $mediaId, type: $mediaType) {
    id
    description
    relations {
      edges {
        relationType(version: 2)
        node {
          id
          idMal
          mediaListEntry {
            progress
            private
            score(format: POINT_100)
            status
          }
          episodes
          chapters
          nextAiringEpisode {
            episode
          }
          popularity
          meanScore
          isAdult
          isFavourite
          format
          title {
            english
            romaji
            userPreferred
          }
          type
          status(version: 2)
          bannerImage
          coverImage {
            extraLarge
            large
            medium
            color
          }
        }
      }
    }
    recommendations(sort: RATING_DESC) {
      nodes {
        mediaRecommendation {
          id
          episodes
          chapters
          meanScore
          isAdult
          format
          title {
            english
            romaji
            userPreferred
          }
          type
          status(version: 2)
          bannerImage
          coverImage {
            large
          }
          mediaListEntry {
            progress
            score(format: POINT_100)
          }
        }
      }
    }
  }

  MediaCharacters: Media(id: $mediaId, type: $mediaType) {
    characters(
      page: 1
      perPage: $charactersPerPage
      sort: [ROLE, FAVOURITES_DESC]
    ) {
      pageInfo {
        hasNextPage
      }
      edges {
        role
        voiceActors {
          id
          name {
            first
            middle
            last
            full
            native
            userPreferred
          }
          image {
            large
            medium
          }
          languageV2
        }
        node {
          id
          image {
            large
            medium
          }
          name {
            userPreferred
          }
          isFavourite
        }
      }
    }
  }

  MediaStaff: Media(id: $mediaId, type: $mediaType) {
    id
    staff(page: 1, perPage: $staffPerPage) {
      pageInfo {
        hasNextPage
      }
      edges {
        id
        role
        node {
          id
          name {
            userPreferred
          }
          image {
            large
          }
        }
      }
    }
  }

  MediaReviews: Media(id: $mediaId, type: $mediaType) {
    reviews(page: 1, perPage: $reviewsPerPage, sort: [RATING_DESC]) {
      pageInfo {
        hasNextPage
      }
      edges {
        node {
          id
          score
          rating
          ratingAmount
          userRating
          summary
          createdAt
          user {
            id
            name
            avatar {
              medium
            }
          }
        }
      }
    }
  }
}
